// Code generated by goctl. DO NOT EDIT.
// Source: film.proto

package server

import (
	"context"

	"cinema-ticket/service/film/rpc/internal/logic"
	"cinema-ticket/service/film/rpc/internal/svc"
	"cinema-ticket/service/film/rpc/types/film"
)

type FilmServer struct {
	svcCtx *svc.ServiceContext
	film.UnimplementedFilmServer
}

func NewFilmServer(svcCtx *svc.ServiceContext) *FilmServer {
	return &FilmServer{
		svcCtx: svcCtx,
	}
}

func (s *FilmServer) JudgeExist(ctx context.Context, in *film.JudgeExistReq) (*film.JudgeExistReply, error) {
	l := logic.NewJudgeExistLogic(ctx, s.svcCtx)
	return l.JudgeExist(in)
}

func (s *FilmServer) FindById(ctx context.Context, in *film.FindReq) (*film.FindReply, error) {
	l := logic.NewFindByIdLogic(ctx, s.svcCtx)
	return l.FindById(in)
}

func (s *FilmServer) DecStock(ctx context.Context, in *film.DecStockReq) (*film.DecStockReply, error) {
	l := logic.NewDecStockLogic(ctx, s.svcCtx)
	return l.DecStock(in)
}

func (s *FilmServer) DecStockRevert(ctx context.Context, in *film.DecStockReq) (*film.DecStockReply, error) {
	l := logic.NewDecStockRevertLogic(ctx, s.svcCtx)
	return l.DecStockRevert(in)
}
